#set($pkg = $package.Entity.substring(0,$package.Entity.lastIndexOf(".")) + ".param")
package ${package.Controller};

import ${package.Entity}.${entity};
import ${pkg}.${entity}Param;
import ${package.ServiceImpl}.${table.serviceImplName};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
##@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
@RequestMapping
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
#set($instanceName = $entity.substring(0,1).toLowerCase() + $entity.substring(1,$entity.length()))
    @Autowired
    private ${table.serviceImplName} ${instanceName}Service;

    @RequestMapping(value = "/${table.entityPath}/{recId}",method = RequestMethod.GET)
    public ResponseEntity get(@PathVariable("recId") Long recId){
        try {
            ${entity} ${instanceName} = ${instanceName}Service.find(recId);
            return ResponseEntity.ok(orders);
        } catch (Exception e) {
            return ResponseEntity.status(500).body(e.getMessage());
        }
    }

    @RequestMapping(value = "/${table.entityPath}", method = RequestMethod.POST)
    public ResponseEntity create(@RequestBody @Validated ${entity}Param param, BindingResult bindingResult) {
        try {
            //验证失败
            if (bindingResult.hasErrors()) {
                throw new RuntimeException(bindingResult.getFieldError().getDefaultMessage());
            }
            Long recId = ${instanceName}Service.create(param);
            return ResponseEntity.ok(recId);
        } catch (Exception e) {
            return ResponseEntity.status(500).body(e.getMessage());
        }
    }

}